buildscript {
    apply from: "dependencies.gradle"
}

plugins {
    id "java-library"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.kapt" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
    id "com.github.ben-manes.versions" version "$gradleVersionCheckVersion"
    id "io.micronaut.application" version "$micronautGradlePluginVersion"
}

version = "0.0.15"
group = "hu.indicium.dev.services"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    kapt supportDependencies.micronaut_validation
    kapt supportDependencies.micronaut_inject_java
    kapt supportDependencies.micronaut_http_validation

    annotationProcessor supportDependencies.micronaut_data_processor
    annotationProcessor supportDependencies.micronaut_http_validation

    api supportDependencies.micronaut_http_client
    api supportDependencies.micronaut_jackson_databind
    api supportDependencies.micronaut_runtime
    api supportDependencies.micronaut_validation
    api supportDependencies.micronaut_management
    api supportDependencies.micronaut_security
    api supportDependencies.micronaut_security_jwt
    api supportDependencies.micronaut_validator
    api supportDependencies.micronaut_mongo_reactive
    api supportDependencies.micronaut_reactor
    api supportDependencies.micronaut_reactor_http_client

    api supportDependencies.kmongo
    api supportDependencies.kmongo_coroutine

    api supportDependencies.jakarta_annotation_api

    api supportDependencies.kotlin_reflect
    api supportDependencies.kotlin_stdlib
    api supportDependencies.kotlin_coroutines_core
    api supportDependencies.kotlin_coroutines_core_common
    api supportDependencies.kotlin_coroutines_rx2
    api supportDependencies.kotlin_coroutines_reactive
    api supportDependencies.kotlin_coroutines_jdk8

    compileOnly supportDependencies.micronaut_kotlin_runtime

    runtimeOnly supportDependencies.logback
}

application {
    mainClass.set("hu.indicium.dev.services.Application")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("hu.indicium.dev.services.*")
    }
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
            javaParameters = true
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
            javaParameters = true
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "skeleton"
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/svIndicium/$project.name"
            credentials {
                username = System.getenv("GITHUB_USERNAME")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

jar {
    into("META-INF/maven/$project.group/$project.name") {
        from { generatePomFileForMavenJavaPublication }
        rename ".*", "pom.xml"
    }
}
